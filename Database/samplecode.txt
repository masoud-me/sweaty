
	db, err := gorm.Open(mysql.New(mysql.Config{
		DSN: "root:Masoud12@@tcp(127.0.0.1:3306)/sweaty?charset=utf8&parseTime=True&loc=Local", // data source name
		DefaultStringSize: 256, // default size for string fields
		DisableDatetimePrecision: true, // disable datetime precision, which not supported before MySQL 5.6
		DontSupportRenameIndex: true, // drop & create when rename index, rename index not supported before MySQL 5.7, MariaDB
		DontSupportRenameColumn: true, // `change` when rename column, rename column not supported before MySQL 8, MariaDB
		SkipInitializeWithVersion: false, // auto configure based on currently MySQL version
	}), &gorm.Config{})

	if err != nil {
		log.Fatal("failed to connect database")
	}

	// Migrate the schema
	db.AutoMigrate(&Database.Product{})

	// Create
	db.Create(&Database.Product{Code: "D42", Price: 100})




	package Database

    import (
    	"gorm.io/gorm"

    	"gorm.io/driver/mysql"
    )

    type Product struct {
    	gorm.Model
    	Code  string
    	Price uint
    }

    func DataBase()  {
    	dsn := "root:Masoud12@@tcp(127.0.0.1:3306)/sweaty"
    	db, err := gorm.Open(mysql.Open(dsn), &gorm.Config{})
    	if err != nil {
    		panic("failed to connect database")
    	}

    	// Migrate the schema
    	db.AutoMigrate(&Product{})

    }